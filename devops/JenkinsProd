pipeline {
    agent {
        label 'built-in'
    }
    environment {
        ENVIRONMENT         = 'prod'
    }
    stages {
        stage("Prepare"){
            steps {
                script {
                    config = readYaml file: "./devops/config/${ENVIRONMENT}.yml"
                }
            }
        }
        /*stage("Code Quality Analysis") {
            steps {
                sh("chmod +x gradlew")
                withSonarQubeEnv('Sonarqube-Devsu') {
                    sh "./gradlew sonarqube"
                }
            }
            
        }
        stage('Build & Push Image') {
            steps {
                script{
                    dockerImage = docker.build config.DOCKER_REGISTRY + ":${env.BUILD_ID}"
                    docker.withRegistry('',config.DOCKER_REGISTRY_CREDENTIALS) {
                        dockerImage.push()
                        sh "docker rmi ${config.DOCKER_REGISTRY}:${env.BUILD_ID}"
                    }
                }
            }
        }*/
        stage('Deploy K8s') {
            steps {
                withCredentials([azureServicePrincipal(config.AZ_K8S_KEY)]) {
                    sh 'az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET -t $AZURE_TENANT_ID'
                    sh 'az aks get-credentials --resource-group Devsu --name aksdevsucluster --subscription 6c26738b-b5d9-4cb1-985e-51558f10f375'
                    sh 'kubectl apply -f ./devops/k8s.yml'
                }                   
            }
        }
    }
    post { 
        always { 
            cleanWs()
        }
    }
}